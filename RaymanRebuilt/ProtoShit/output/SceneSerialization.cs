// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SceneSerialization.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace RREngine.Engine.Protobuf.Scene.SceneSerialization {

  /// <summary>Holder for reflection information generated from SceneSerialization.proto</summary>
  public static partial class SceneSerializationReflection {

    #region Descriptor
    /// <summary>File descriptor for SceneSerialization.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SceneSerializationReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhTY2VuZVNlcmlhbGl6YXRpb24ucHJvdG8SDVJheW1hblJlYnVpbHQiLwoM",
            "VmVjdG9yM1Byb3RvEgkKAXgYASABKAISCQoBeRgCIAEoAhIJCgF6GAMgASgC",
            "Ij0KD1F1YXRlcm5pb25Qcm90bxIJCgF4GAEgASgCEgkKAXkYAiABKAISCQoB",
            "ehgDIAEoAhIJCgF3GAQgASgCIp8BCg5UcmFuc2Zvcm1Qcm90bxItCghwb3Np",
            "dGlvbhgBIAEoCzIbLlJheW1hblJlYnVpbHQuVmVjdG9yM1Byb3RvEjIKCnF1",
            "YXRlcm5pb24YAiABKAsyHi5SYXltYW5SZWJ1aWx0LlF1YXRlcm5pb25Qcm90",
            "bxIqCgVzY2FsZRgDIAEoCzIbLlJheW1hblJlYnVpbHQuVmVjdG9yM1Byb3Rv",
            "Ij0KClNjZW5lUHJvdG8SLwoHb2JqZWN0cxgBIAMoCzIeLlJheW1hblJlYnVp",
            "bHQuR2FtZU9iamVjdFByb3RvIicKDkNvbXBvbmVudFByb3RvEhUKDWNvbXBv",
            "bmVudE5hbWUYASABKAkidgoPR2FtZU9iamVjdFByb3RvEjAKCXRyYW5zZm9y",
            "bRgBIAEoCzIdLlJheW1hblJlYnVpbHQuVHJhbnNmb3JtUHJvdG8SMQoKY29t",
            "cG9uZW50cxgCIAMoCzIdLlJheW1hblJlYnVpbHQuQ29tcG9uZW50UHJvdG9C",
            "NKoCMVJSRW5naW5lLkVuZ2luZS5Qcm90b2J1Zi5TY2VuZS5TY2VuZVNlcmlh",
            "bGl6YXRpb25iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::RREngine.Engine.Protobuf.Scene.SceneSerialization.Vector3Proto), global::RREngine.Engine.Protobuf.Scene.SceneSerialization.Vector3Proto.Parser, new[]{ "X", "Y", "Z" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RREngine.Engine.Protobuf.Scene.SceneSerialization.QuaternionProto), global::RREngine.Engine.Protobuf.Scene.SceneSerialization.QuaternionProto.Parser, new[]{ "X", "Y", "Z", "W" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RREngine.Engine.Protobuf.Scene.SceneSerialization.TransformProto), global::RREngine.Engine.Protobuf.Scene.SceneSerialization.TransformProto.Parser, new[]{ "Position", "Quaternion", "Scale" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RREngine.Engine.Protobuf.Scene.SceneSerialization.SceneProto), global::RREngine.Engine.Protobuf.Scene.SceneSerialization.SceneProto.Parser, new[]{ "Objects" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RREngine.Engine.Protobuf.Scene.SceneSerialization.ComponentProto), global::RREngine.Engine.Protobuf.Scene.SceneSerialization.ComponentProto.Parser, new[]{ "ComponentName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RREngine.Engine.Protobuf.Scene.SceneSerialization.GameObjectProto), global::RREngine.Engine.Protobuf.Scene.SceneSerialization.GameObjectProto.Parser, new[]{ "Transform", "Components" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Vector3Proto : pb::IMessage<Vector3Proto> {
    private static readonly pb::MessageParser<Vector3Proto> _parser = new pb::MessageParser<Vector3Proto>(() => new Vector3Proto());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Vector3Proto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RREngine.Engine.Protobuf.Scene.SceneSerialization.SceneSerializationReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vector3Proto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vector3Proto(Vector3Proto other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vector3Proto Clone() {
      return new Vector3Proto(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 3;
    private float z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Vector3Proto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Vector3Proto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      if (Z != other.Z) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0F) hash ^= X.GetHashCode();
      if (Y != 0F) hash ^= Y.GetHashCode();
      if (Z != 0F) hash ^= Z.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Z);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Y != 0F) {
        size += 1 + 4;
      }
      if (Z != 0F) {
        size += 1 + 4;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Vector3Proto other) {
      if (other == null) {
        return;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      if (other.Z != 0F) {
        Z = other.Z;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
          case 29: {
            Z = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class QuaternionProto : pb::IMessage<QuaternionProto> {
    private static readonly pb::MessageParser<QuaternionProto> _parser = new pb::MessageParser<QuaternionProto>(() => new QuaternionProto());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QuaternionProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RREngine.Engine.Protobuf.Scene.SceneSerialization.SceneSerializationReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuaternionProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuaternionProto(QuaternionProto other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      w_ = other.w_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QuaternionProto Clone() {
      return new QuaternionProto(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 3;
    private float z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    /// <summary>Field number for the "w" field.</summary>
    public const int WFieldNumber = 4;
    private float w_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float W {
      get { return w_; }
      set {
        w_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QuaternionProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QuaternionProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      if (Z != other.Z) return false;
      if (W != other.W) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0F) hash ^= X.GetHashCode();
      if (Y != 0F) hash ^= Y.GetHashCode();
      if (Z != 0F) hash ^= Z.GetHashCode();
      if (W != 0F) hash ^= W.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Z);
      }
      if (W != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(W);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Y != 0F) {
        size += 1 + 4;
      }
      if (Z != 0F) {
        size += 1 + 4;
      }
      if (W != 0F) {
        size += 1 + 4;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QuaternionProto other) {
      if (other == null) {
        return;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      if (other.Z != 0F) {
        Z = other.Z;
      }
      if (other.W != 0F) {
        W = other.W;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
          case 29: {
            Z = input.ReadFloat();
            break;
          }
          case 37: {
            W = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TransformProto : pb::IMessage<TransformProto> {
    private static readonly pb::MessageParser<TransformProto> _parser = new pb::MessageParser<TransformProto>(() => new TransformProto());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransformProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RREngine.Engine.Protobuf.Scene.SceneSerialization.SceneSerializationReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransformProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransformProto(TransformProto other) : this() {
      Position = other.position_ != null ? other.Position.Clone() : null;
      Quaternion = other.quaternion_ != null ? other.Quaternion.Clone() : null;
      Scale = other.scale_ != null ? other.Scale.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransformProto Clone() {
      return new TransformProto(this);
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 1;
    private global::RREngine.Engine.Protobuf.Scene.SceneSerialization.Vector3Proto position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::RREngine.Engine.Protobuf.Scene.SceneSerialization.Vector3Proto Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "quaternion" field.</summary>
    public const int QuaternionFieldNumber = 2;
    private global::RREngine.Engine.Protobuf.Scene.SceneSerialization.QuaternionProto quaternion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::RREngine.Engine.Protobuf.Scene.SceneSerialization.QuaternionProto Quaternion {
      get { return quaternion_; }
      set {
        quaternion_ = value;
      }
    }

    /// <summary>Field number for the "scale" field.</summary>
    public const int ScaleFieldNumber = 3;
    private global::RREngine.Engine.Protobuf.Scene.SceneSerialization.Vector3Proto scale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::RREngine.Engine.Protobuf.Scene.SceneSerialization.Vector3Proto Scale {
      get { return scale_; }
      set {
        scale_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransformProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransformProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Position, other.Position)) return false;
      if (!object.Equals(Quaternion, other.Quaternion)) return false;
      if (!object.Equals(Scale, other.Scale)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (position_ != null) hash ^= Position.GetHashCode();
      if (quaternion_ != null) hash ^= Quaternion.GetHashCode();
      if (scale_ != null) hash ^= Scale.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (position_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Position);
      }
      if (quaternion_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Quaternion);
      }
      if (scale_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Scale);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (quaternion_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Quaternion);
      }
      if (scale_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Scale);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransformProto other) {
      if (other == null) {
        return;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          position_ = new global::RREngine.Engine.Protobuf.Scene.SceneSerialization.Vector3Proto();
        }
        Position.MergeFrom(other.Position);
      }
      if (other.quaternion_ != null) {
        if (quaternion_ == null) {
          quaternion_ = new global::RREngine.Engine.Protobuf.Scene.SceneSerialization.QuaternionProto();
        }
        Quaternion.MergeFrom(other.Quaternion);
      }
      if (other.scale_ != null) {
        if (scale_ == null) {
          scale_ = new global::RREngine.Engine.Protobuf.Scene.SceneSerialization.Vector3Proto();
        }
        Scale.MergeFrom(other.Scale);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (position_ == null) {
              position_ = new global::RREngine.Engine.Protobuf.Scene.SceneSerialization.Vector3Proto();
            }
            input.ReadMessage(position_);
            break;
          }
          case 18: {
            if (quaternion_ == null) {
              quaternion_ = new global::RREngine.Engine.Protobuf.Scene.SceneSerialization.QuaternionProto();
            }
            input.ReadMessage(quaternion_);
            break;
          }
          case 26: {
            if (scale_ == null) {
              scale_ = new global::RREngine.Engine.Protobuf.Scene.SceneSerialization.Vector3Proto();
            }
            input.ReadMessage(scale_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SceneProto : pb::IMessage<SceneProto> {
    private static readonly pb::MessageParser<SceneProto> _parser = new pb::MessageParser<SceneProto>(() => new SceneProto());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SceneProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RREngine.Engine.Protobuf.Scene.SceneSerialization.SceneSerializationReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SceneProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SceneProto(SceneProto other) : this() {
      objects_ = other.objects_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SceneProto Clone() {
      return new SceneProto(this);
    }

    /// <summary>Field number for the "objects" field.</summary>
    public const int ObjectsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::RREngine.Engine.Protobuf.Scene.SceneSerialization.GameObjectProto> _repeated_objects_codec
        = pb::FieldCodec.ForMessage(10, global::RREngine.Engine.Protobuf.Scene.SceneSerialization.GameObjectProto.Parser);
    private readonly pbc::RepeatedField<global::RREngine.Engine.Protobuf.Scene.SceneSerialization.GameObjectProto> objects_ = new pbc::RepeatedField<global::RREngine.Engine.Protobuf.Scene.SceneSerialization.GameObjectProto>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::RREngine.Engine.Protobuf.Scene.SceneSerialization.GameObjectProto> Objects {
      get { return objects_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SceneProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SceneProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!objects_.Equals(other.objects_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= objects_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      objects_.WriteTo(output, _repeated_objects_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += objects_.CalculateSize(_repeated_objects_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SceneProto other) {
      if (other == null) {
        return;
      }
      objects_.Add(other.objects_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            objects_.AddEntriesFrom(input, _repeated_objects_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ComponentProto : pb::IMessage<ComponentProto> {
    private static readonly pb::MessageParser<ComponentProto> _parser = new pb::MessageParser<ComponentProto>(() => new ComponentProto());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ComponentProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RREngine.Engine.Protobuf.Scene.SceneSerialization.SceneSerializationReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComponentProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComponentProto(ComponentProto other) : this() {
      componentName_ = other.componentName_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComponentProto Clone() {
      return new ComponentProto(this);
    }

    /// <summary>Field number for the "componentName" field.</summary>
    public const int ComponentNameFieldNumber = 1;
    private string componentName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ComponentName {
      get { return componentName_; }
      set {
        componentName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ComponentProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ComponentProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ComponentName != other.ComponentName) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ComponentName.Length != 0) hash ^= ComponentName.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ComponentName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ComponentName);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ComponentName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ComponentName);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ComponentProto other) {
      if (other == null) {
        return;
      }
      if (other.ComponentName.Length != 0) {
        ComponentName = other.ComponentName;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            ComponentName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GameObjectProto : pb::IMessage<GameObjectProto> {
    private static readonly pb::MessageParser<GameObjectProto> _parser = new pb::MessageParser<GameObjectProto>(() => new GameObjectProto());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameObjectProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RREngine.Engine.Protobuf.Scene.SceneSerialization.SceneSerializationReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameObjectProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameObjectProto(GameObjectProto other) : this() {
      Transform = other.transform_ != null ? other.Transform.Clone() : null;
      components_ = other.components_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameObjectProto Clone() {
      return new GameObjectProto(this);
    }

    /// <summary>Field number for the "transform" field.</summary>
    public const int TransformFieldNumber = 1;
    private global::RREngine.Engine.Protobuf.Scene.SceneSerialization.TransformProto transform_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::RREngine.Engine.Protobuf.Scene.SceneSerialization.TransformProto Transform {
      get { return transform_; }
      set {
        transform_ = value;
      }
    }

    /// <summary>Field number for the "components" field.</summary>
    public const int ComponentsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::RREngine.Engine.Protobuf.Scene.SceneSerialization.ComponentProto> _repeated_components_codec
        = pb::FieldCodec.ForMessage(18, global::RREngine.Engine.Protobuf.Scene.SceneSerialization.ComponentProto.Parser);
    private readonly pbc::RepeatedField<global::RREngine.Engine.Protobuf.Scene.SceneSerialization.ComponentProto> components_ = new pbc::RepeatedField<global::RREngine.Engine.Protobuf.Scene.SceneSerialization.ComponentProto>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::RREngine.Engine.Protobuf.Scene.SceneSerialization.ComponentProto> Components {
      get { return components_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameObjectProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameObjectProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Transform, other.Transform)) return false;
      if(!components_.Equals(other.components_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (transform_ != null) hash ^= Transform.GetHashCode();
      hash ^= components_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (transform_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Transform);
      }
      components_.WriteTo(output, _repeated_components_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (transform_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Transform);
      }
      size += components_.CalculateSize(_repeated_components_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameObjectProto other) {
      if (other == null) {
        return;
      }
      if (other.transform_ != null) {
        if (transform_ == null) {
          transform_ = new global::RREngine.Engine.Protobuf.Scene.SceneSerialization.TransformProto();
        }
        Transform.MergeFrom(other.Transform);
      }
      components_.Add(other.components_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (transform_ == null) {
              transform_ = new global::RREngine.Engine.Protobuf.Scene.SceneSerialization.TransformProto();
            }
            input.ReadMessage(transform_);
            break;
          }
          case 18: {
            components_.AddEntriesFrom(input, _repeated_components_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
